 { $$ = createNode(2 , NULL , NULL , '\0' , 0 , $1) ; cout << $1 << endl ; }

 { $$ = createNode(2 , $3 , NULL , '\0' , 0 , $1) ; cout << $3->node_type_obj.variable_name << endl ; }

%type <func_node_ptr> print_var_expr_list

 print_var_expr_list: expr                            {$$ = createFunc_Node(*($1) , NULL);}
                   | print_var_expr_list ',' expr    
                    { struct funcStmt_node *s ;
                      s = createFunc_Node(*($3) , NULL); 
                      struct funcStmt_node *temp = $1 ;
                
                      while( temp -> next !=  NULL)
                      {
                          temp = temp -> next ;   
                      }
                      temp -> next = s;
                
                      $$ = $1 ;
                    }



void print_func_tree(struct funcStmt_node *root)
{
	struct funcStmt_node *temp = root ;
	double result = 0;
	struct symbol_details *sym ;

	while(temp != NULL)
	{
		result = evaluate_Expr_Tree(&temp->args.expr , 1) ;
		if(result != -100)
		{
			cout << result << endl ;
		}
		